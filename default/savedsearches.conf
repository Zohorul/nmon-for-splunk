
############################################################
#	Simple search used in Home page to show
#	numbers of hosts indexed within last 7 days
############################################################

[Hosts with data within last 7 days]
action.email.reportServerEnabled = 0
alert.track = 0
auto_summarize = 0
auto_summarize.dispatch.earliest_time = -7d@d
cron_schedule = 0 * * * *
description = Number of hosts with data within last 7 days
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
display.general.type = statistics
display.visualizations.chartHeight = 420
display.visualizations.charting.chart = area
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = nmon
request.ui_dispatch_view = search
search = | pivot NMON_Config Nmon_Config last(AIX_Machine_SerialNumber) AS "AIX_Machine_SerialNumber" dc(hostname) AS "dcount" SPLITROW hostname AS hostname SORT 0 hostname ROWSUMMARY 0 COLSUMMARY 0 NUMCOLS 0 SHOWOTHER 0\
| eval serialnum=if(isnull(AIX_Machine_SerialNumber), hostname, AIX_Machine_SerialNumber) | fields hostname,serialnum | stats count

#############################################################
# Indexing Volume
#############################################################

[Volume of Data indexed Today]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize = 1
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = */2 * * * *
dispatch.earliest_time = @d
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.statistics.drilldown = none
display.statistics.rowNumbers = 1
display.visualizations.chartHeight = 420
display.visualizations.charting.chart.style = minimal
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = nmon
request.ui_dispatch_view = search
search = index=_internal source=*license_usage.log* type=Usage idx=nmon | stats sum(b) AS volume | eval trend1=round((volume/1024/1024),2) | fields trend1\
| appendcols\
[ search index=_internal source=*license_usage.log* type=Usage idx=nmon earliest="-1d@d" latest="-1d" | stats sum(b) AS volume | eval trend2=round((volume/1024/1024),2) | fields trend2 ]\
| transpose | fields row* | rename "row 1" As value

#############################################################
# NMON Inventory
#############################################################

# This report will generate the inventory lookup table used in many interfaces of the App.
# We arbitrary only keep one result per day and per host of the nmon_config sourcetype, then we keep the last value by field in case of multiple values found, typically an hardware configuration
# change

[Generate NMON Inventory Lookup Table]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize = 0
auto_summarize.dispatch.earliest_time =
cron_schedule = 0 * * * *
description = Generation of NMON Inventory Lookup Table
dispatch.earliest_time =
dispatch.latest_time = now
dispatch.ttl = 14400 # Keep 4 hours this job artefact
display.events.fields = ["host","source","sourcetype","hostname"]
display.events.type = raw
display.general.type = statistics
display.statistics.drilldown = none
display.statistics.rowNumbers = 1
display.visualizations.chartHeight = 420
display.visualizations.charting.chart = line
display.visualizations.charting.chart.style = minimal
display.visualizations.show = 0
display.visualizations.type = singlevalue
enableSched = 1
request.ui_dispatch_app = nmon
request.ui_dispatch_view = search
search = | tstats latest("Nmon_Config.AIX_Machine_SerialNumber") AS AIX_Machine_SerialNumber\
latest("Nmon_Config.AIX_virtualcpus") AS AIX_virtualcpus\
latest("Nmon_Config.AIX_logicalcores") AS AIX_logicalcores\
latest("Nmon_Config.AIX_entitled") AS AIX_entitled\
latest("Nmon_Config.AIX_LEVEL") AS AIX_LEVEL\
latest("Nmon_Config.AIX_processor_mode") AS AIX_processor_mode\
latest("Nmon_Config.AIX_processor_clockspeed") AS AIX_processor_clockspeed\
latest("Nmon_Config.AIX_cpu_type") AS AIX_cpu_type\
latest("Nmon_Config.AIX_kernel_type") AS AIX_kernel_type\
latest("Nmon_Config.AIX_plateform_firmware_level") AS AIX_plateform_firmware_level\
latest("Nmon_Config.AIX_PoolID") AS AIX_PoolID\
latest("Nmon_Config.AIX_system_installed_CPUs") AS AIX_system_installed_CPUs\
latest("Nmon_Config.AIX_system_active_CPUs") AS AIX_system_active_CPUs\
latest("Nmon_Config.AIX_PoolCPUs") AS AIX_PoolCPUs\
latest("Nmon_Config.Linux_memory_MB") AS Linux_memory_MB\
latest("Nmon_Config.Linux_swap_MB") AS Linux_swap_MB\
latest("Nmon_Config.Linux_distribution") AS Linux_distribution\
latest("Nmon_Config.Linux_vendor") AS Linux_vendor\
latest("Nmon_Config.Linux_kernelversion") AS Linux_kernelversion\
latest("Nmon_Config.Solaris_version") AS Solaris_version\
latest("Nmon_Config.Solaris_sunOS_version") AS Solaris_sunOS_version\
latest("Nmon_Config.Solaris_processor_clockspeed") AS Solaris_processor_clockspeed\
latest("Nmon_Config.Processor") AS Processor\
latest("Nmon_Config.cpu_cores") AS cpu_cores\
latest("Nmon_Config.nmon_version") AS nmon_version\
from datamodel=NMON_Config where (nodename = Nmon_Config) groupby "Nmon_Config.hostname", "Nmon_Config.OStype" prestats=true\
| stats dedup_splitvals=t\
latest("Nmon_Config.AIX_Machine_SerialNumber") AS AIX_Machine_SerialNumber\
latest("Nmon_Config.AIX_virtualcpus") AS AIX_virtualcpus\
latest("Nmon_Config.AIX_logicalcores") AS AIX_logicalcores\
latest("Nmon_Config.AIX_entitled") AS AIX_entitled\
latest("Nmon_Config.AIX_LEVEL") AS AIX_LEVEL\
latest("Nmon_Config.AIX_processor_mode") AS AIX_processor_mode\
latest("Nmon_Config.AIX_processor_clockspeed") AS AIX_processor_clockspeed\
latest("Nmon_Config.AIX_cpu_type") AS AIX_cpu_type\
latest("Nmon_Config.AIX_kernel_type") AS AIX_kernel_type\
latest("Nmon_Config.AIX_plateform_firmware_level") AS AIX_plateform_firmware_level\
latest("Nmon_Config.AIX_PoolID") AS AIX_PoolID\
latest("Nmon_Config.AIX_system_installed_CPUs") AS AIX_system_installed_CPUs\
latest("Nmon_Config.AIX_system_active_CPUs") AS AIX_system_active_CPUs\
latest("Nmon_Config.AIX_PoolCPUs") AS AIX_PoolCPUs\
latest("Nmon_Config.Linux_memory_MB") AS Linux_memory_MB\
latest("Nmon_Config.Linux_swap_MB") AS Linux_swap_MB\
latest("Nmon_Config.Linux_distribution") AS Linux_distribution\
latest("Nmon_Config.Linux_vendor") AS Linux_vendor\
latest("Nmon_Config.Linux_kernelversion") AS Linux_kernelversion\
latest("Nmon_Config.Solaris_version") AS Solaris_version\
latest("Nmon_Config.Solaris_sunOS_version") AS Solaris_sunOS_version\
latest("Nmon_Config.Solaris_processor_clockspeed") AS Solaris_processor_clockspeed\
latest("Nmon_Config.Processor") AS Processor\
latest("Nmon_Config.cpu_cores") AS cpu_cores\
latest("Nmon_Config.nmon_version") AS nmon_version by "Nmon_Config.hostname", "Nmon_Config.OStype"\
| sort limit=0 "Nmon_Config.hostname"\
| fields - _span\
| rename "Nmon_Config.hostname" AS hostname "Nmon_Config.OStype" AS OStype\
| fields hostname, OStype, AIX_Machine_SerialNumber, AIX_virtualcpus, AIX_logicalcores, AIX_entitled, AIX_LEVEL,\
AIX_processor_mode, AIX_processor_clockspeed, AIX_cpu_type, AIX_kernel_type, AIX_plateform_firmware_level, AIX_PoolID,\
AIX_system_installed_CPUs, AIX_system_active_CPUs, AIX_PoolCPUs, Linux_memory_MB, Linux_swap_MB, Linux_distribution,\
Linux_vendor, Linux_kernelversion, Solaris_version, Solaris_sunOS_version, Solaris_processor_clockspeed, Processor, cpu_cores, nmon_version\
| fillnull value=Undeterminated\
| outputlookup nmon_inventory

#############################################################
# NMON Inventory
#############################################################

# This report will generate the Nmon baseline and store results in the nmon_baseline KV Store
# By default, the schedule runs every sunday at midnight

[Generate NMON Baseline KV Collection]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 0 0 * * 0
description = This report is expected to be scheduled at night time, and will generate usual values of main metrics (baseline) by hostname, time and week of day
dispatch.earliest_time = -3mon@d
dispatch.latest_time = @d
display.events.fields = ["host","hostname","type","source","sourcetype"]
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.chartHeight = 563
display.visualizations.charting.chart = line
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = nmon
request.ui_dispatch_view = search
search = index=nmon sourcetype=nmon_data (type=CPU_ALL OR type=LPAR OR type=MEM OR type=DISKXFER)\
| eval frameID=if(isnotnull(frameID), frameID, serialnum)\
| eval cpu_PCT=case(type == "CPU_ALL", (Sys_PCT+User_PCT+Wait_PCT))\
| eval AIX_vp_usage=case(type == "LPAR", ((VP_User_PCT+VP_Sys_PCT+VP_Wait_PCT+VP_Idle_PCT)*virtualCPUs/100))\
| eval AIX_pool_usage=case(type == "LPAR", (poolCPUs-PoolIdle))\
| eval sum_disk_total_IOPS=case(type == "DISKXFER", value)\
| eval Real_used_MB=round((Real_total_MB-Real_free_MB),1)\
| eval Virtual_total_MB=round((Virtual_total_MB),1)\
| eval Virtual_used_MB=round((Virtual_total_MB-Virtual_free_MB),1)\
| eval memused=round((memtotal-memfree),1)\
| eval swapused=round((swaptotal-swapfree),1)\
| eval Real_used_PCT=round(((Real_used_MB/Real_total_MB)*100),1)\
| eval Virtual_used_PCT=round(((Virtual_used_MB/Virtual_total_MB)*100),1)\
| eval memfree_PCT=round(((memfree/memtotal)*100),1)\
| eval memused_PCT=round(((memused/memtotal)*100),1)\
| eval swapfree_PCT=round(((swapfree/swaptotal)*100),1)\
| eval swapused_PCT=round(((swapused/swaptotal)*100),1)\
| eval Real_used_PCT=if(isnotnull(Real_used_PCT),Real_used_PCT,memused_PCT)\
| eval Virtual_used_PCT=if(isnotnull(Virtual_used_PCT),Virtual_used_PCT,swapused_PCT)\
| eventstats avg(cpu_PCT) AS avg_cpu, avg(AIX_vp_usage) AS avg_vp_usage, avg(AIX_pool_usage) AS avg_pool_usage,\
avg(Real_used_PCT) AS avg_real_mem, avg(Virtual_used_PCT) AS avg_virtual_mem,\
sum(sum_disk_total_IOPS) AS avg_disk_iops by _time,frameID,hostname\
| eval date_wday=lower(strftime('_time', "%A"))\
| eval local_time=strftime('_time', "%H%M")\
| stats\
perc05(avg_cpu) AS lower_baseline_avg_cpu, avg(avg_cpu) AS baseline_avg_cpu, perc95(avg_cpu) AS upper_baseline_avg_cpu\
perc05(avg_vp_usage) AS lower_baseline_avg_vp_usage, avg(avg_vp_usage) AS baseline_avg_vp_usage, perc95(avg_vp_usage) AS upper_baseline_avg_vp_usage,\
perc05(avg_pool_usage) AS lower_baseline_avg_pool_usage, avg(avg_pool_usage) AS baseline_avg_pool_usage, perc95(avg_pool_usage) AS upper_baseline_avg_pool_usage,\
perc05(avg_real_mem) AS lower_baseline_avg_real_mem, avg(avg_real_mem) AS baseline_avg_real_mem, perc95(avg_real_mem) AS upper_baseline_avg_real_mem,\
perc05(avg_virtual_mem) AS lower_baseline_avg_virtual_mem, avg(avg_virtual_mem) AS baseline_avg_virtual_mem, perc95(avg_virtual_mem) AS upper_baseline_avg_virtual_mem,\
perc05(avg_disk_iops) AS lower_baseline_avg_disk_iops, avg(avg_disk_iops) AS baseline_avg_disk_iops, perc95(avg_disk_iops) AS upper_baseline_avg_disk_iops\
by date_wday,local_time,frameID,hostname\
| foreach *baseline* [ eval <<FIELD>> = round(<<FIELD>>, 2) ] | outputlookup nmon_baseline

####################################################################
# NMON Processing Errors: Number of errors reported in last 24 hours
####################################################################

[Number of Errors in Data Processing or Data Collect since last 24 Hours]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.digest_mode = True
alert.suppress = 0
alert.track = 0
auto_summarize = 1
auto_summarize.dispatch.earliest_time = -1d@h
cron_schedule = */2 * * * *
dispatch.earliest_time = -24h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = fast
display.statistics.drilldown = none
display.statistics.rowNumbers = 1
display.visualizations.chartHeight = 420
display.visualizations.charting.chart.style = minimal
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = nmon
request.ui_dispatch_view = search
search = (index=nmon sourcetype=nmon_processing OR sourcetype=nmon_collect error) OR (index=_internal sourcetype=splunkd ERROR ExecProcessor nmon) NOT ("There is no python in" OR "python: not found") | stats count As trend1\
| appendcols\
[ search (index=nmon sourcetype=nmon_processing OR sourcetype=nmon_collect error) OR (index=_internal sourcetype=splunkd ERROR ExecProcessor nmon) NOT ("There is no python in" OR "python: not found") earliest="-1d@d" latest="@d" | stats count As trend2 ]\
| transpose | fields row* | rename "row 1" As value

#############################################################
# NMON Processing Errors
#############################################################

[Errors in NMON Data Processing]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -24h
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","hostname"]
display.events.type = raw
display.statistics.drilldown = none
display.statistics.rowNumbers = 1
display.visualizations.chartHeight = 420
display.visualizations.charting.chart = line
display.visualizations.charting.chart.style = minimal
display.visualizations.show = 0
display.visualizations.type = singlevalue
request.ui_dispatch_app = nmon
request.ui_dispatch_view = search
search = index=nmon sourcetype=nmon_processing error

#############################################################
# NMON Collect Errors
#############################################################

[Errors in NMON Data Collect]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -24h
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","hostname"]
display.events.type = raw
display.statistics.drilldown = none
display.statistics.rowNumbers = 1
display.visualizations.chartHeight = 420
display.visualizations.charting.chart = line
display.visualizations.charting.chart.style = minimal
display.visualizations.show = 0
display.visualizations.type = singlevalue
request.ui_dispatch_app = nmon
request.ui_dispatch_view = search
search = index=nmon sourcetype=nmon_collect error

#############################################################
# NMON Collect Activity
#############################################################

[Activity of NMON Data Collect]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -24h
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","hostname"]
display.events.type = raw
display.general.type = statistics
display.statistics.drilldown = none
display.statistics.rowNumbers = 1
display.visualizations.chartHeight = 420
display.visualizations.charting.chart = line
display.visualizations.charting.chart.style = minimal
display.visualizations.show = 0
display.visualizations.type = singlevalue
request.ui_dispatch_app = nmon
request.ui_dispatch_view = search
search = index=nmon sourcetype="nmon_collect" | table _time,host,_raw | rename _raw as event


#############################################################
# NMON Processing Activity
#############################################################

[Activity of NMON Data Processing]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -24h
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","hostname"]
display.events.type = raw
display.general.type = statistics
display.statistics.drilldown = none
display.statistics.rowNumbers = 1
display.visualizations.chartHeight = 420
display.visualizations.charting.chart = line
display.visualizations.charting.chart.style = minimal
display.visualizations.show = 0
display.visualizations.type = singlevalue
request.ui_dispatch_app = nmon
request.ui_dispatch_view = search
search = index=nmon sourcetype=nmon_processing | stats values(hostname) As "hostname (Nmon host)", values(_raw) As event by _time,host | rename host As "host (collecter)" | sort - _time

#############################################################
# NMON Activity - Splunkd events
#############################################################

[Activity of NMON - Splunkd events]
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","hostname"]
display.events.type = raw
display.statistics.drilldown = none
display.statistics.rowNumbers = 1
display.visualizations.chartHeight = 420
display.visualizations.charting.chart.style = minimal
display.visualizations.show = 0
request.ui_dispatch_app = nmon
request.ui_dispatch_view = search
search = index=_internal sourcetype=splunkd nmon *Processor

#############################################################
# NMON Report Inventory
#############################################################

[NMON Inventory Solaris]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
display.events.fields = ["host","source","sourcetype","hostname"]
display.events.type = raw
display.general.type = statistics
display.statistics.drilldown = none
display.statistics.rowNumbers = 1
display.visualizations.chartHeight = 420
display.visualizations.charting.chart = line
display.visualizations.charting.chart.style = minimal
display.visualizations.show = 0
display.visualizations.type = singlevalue
request.ui_dispatch_app = nmon
request.ui_dispatch_view = search
search = | inputlookup nmon_inventory | search OStype=Solaris\
| fields hostname,OStype,Solaris_sunOS_version,Solaris_version,cpu_cores,Processor,Solaris_processor_clockspeed,nmon_version

[NMON Inventory Linux]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
display.events.fields = ["host","source","sourcetype","hostname"]
display.events.type = raw
display.general.type = statistics
display.statistics.drilldown = none
display.statistics.rowNumbers = 1
display.visualizations.chartHeight = 420
display.visualizations.charting.chart = line
display.visualizations.charting.chart.style = minimal
display.visualizations.show = 0
display.visualizations.type = singlevalue
request.ui_dispatch_app = nmon
request.ui_dispatch_view = search
search = | inputlookup nmon_inventory | search OStype=Linux\
| fields hostname,OStype,cpu_cores,Processor,Linux_memory_MB,Linux_swap_MB,Linux_distribution,Linux_kernelversion,nmon_version

[NMON Inventory AIX]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
display.events.fields = ["host","source","sourcetype","hostname"]
display.events.type = raw
display.general.type = statistics
display.statistics.drilldown = none
display.statistics.rowNumbers = 1
display.visualizations.chartHeight = 420
display.visualizations.charting.chart = line
display.visualizations.charting.chart.style = minimal
display.visualizations.show = 0
display.visualizations.type = singlevalue
request.ui_dispatch_app = nmon
request.ui_dispatch_view = search
search = | inputlookup nmon_inventory | search OStype=AIX\
| fields  hostname,OStype,AIX_Machine_SerialNumber,AIX_virtualcpus,AIX_logicalcores,entitled,Processor,AIX_processor_mode,AIX_processor_clockspeed,AIX_cpu_type,AIX_kernel_type,AIX_plateform_firmware_level,nmon_version,AIX_PoolID,AIX_system_installed_CPUs,AIX_system_active_CPUs,AIX_PoolCPUs

#############################################################
# NMON Alerting
#############################################################

[NMON - File System % usage exceeds 90% (5 consecutive minutes minimal duration)]
action.email = 0
action.email.include.trigger_time = 1
action.email.inline = 1
action.email.priority = 2
action.email.reportServerEnabled = 0
action.email.sendresults = 0
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.severity = 4
alert.suppress = 1
alert.suppress.fields = frameID,hostname
alert.suppress.period = 60m
alert.track = 1
counttype = number of events
cron_schedule = */5 * * * *
description = This alert with trigger hosts having a File System with % global usage superior to 90 %, and for a duration higher or equal to 5 minutes consecutively. (applicable for all OS)
dispatch.earliest_time = -60m
dispatch.latest_time = now
display.events.fields = ["host","hostname","type","source","sourcetype"]
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.chartHeight = 571
display.visualizations.charting.chart = bar
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = nmon
request.ui_dispatch_view = search
search = `alerting_filesystem_usage(*,*,90,300,5m)`

[NMON - Real Memory % usage exceeds 90% (5 consecutive minutes minimal duration)]
action.email = 0
action.email.include.trigger_time = 1
action.email.inline = 1
action.email.priority = 2
action.email.reportServerEnabled = 0
action.email.sendresults = 0
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.severity = 4
alert.suppress = 1
alert.suppress.fields = frameID,hostname
alert.suppress.period = 60m
alert.track = 1
counttype = number of events
cron_schedule = */5 * * * *
description = This alert with trigger hosts having a Real Memory % global usage superior to 90 %, and for a duration higher or equal to 5 minutes consecutively. (applicable for all OS)
dispatch.earliest_time = -60m
dispatch.latest_time = now
display.events.fields = ["host","hostname","type","source","sourcetype"]
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.chartHeight = 571
display.visualizations.charting.chart = bar
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = nmon
request.ui_dispatch_view = search
search = `alerting_realmemory_usage(*,*,90,300,5m)`

[NMON - Virtual Memory % usage exceeds 40% (5 consecutive minutes minimal duration)]
action.email = 0
action.email.include.trigger_time = 1
action.email.inline = 1
action.email.priority = 2
action.email.reportServerEnabled = 0
action.email.sendresults = 0
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.severity = 4
alert.suppress = 1
alert.suppress.fields = frameID,hostname
alert.suppress.period = 60m
alert.track = 1
counttype = number of events
cron_schedule = */5 * * * *
description = This alert with trigger hosts having a Virtual Memory % global usage superior to 40 %, and for a duration higher or equal to 5 minutes consecutively. (applicable for all OS)
dispatch.earliest_time = -60m
dispatch.latest_time = now
display.events.fields = ["host","hostname","type","source","sourcetype"]
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.chartHeight = 571
display.visualizations.charting.chart = bar
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = nmon
request.ui_dispatch_view = search
search = `alerting_virtualmemory_usage(*,*,40,300,5m)`

[NMON - IBM PSERIES Pools CPU % usage exceeds 90% (5 consecutive minutes minimal duration)]
action.email = 0
action.email.include.trigger_time = 1
action.email.inline = 1
action.email.priority = 2
action.email.reportServerEnabled = 0
action.email.sendresults = 0
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.severity = 4
alert.suppress = 1
alert.suppress.fields = frameID,Pool_id
alert.suppress.period = 60m
alert.track = 1
counttype = number of events
cron_schedule = */5 * * * *
description = This alert with trigger IBM PSeries Pools having a CPU % global usage superior to 90 %, and for a duration higher or equal to 5 minutes consecutively.\
(applicable for AIX only)
dispatch.earliest_time = -60m
dispatch.latest_time = now
display.events.fields = ["host","hostname","type","source","sourcetype"]
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.chartHeight = 571
display.visualizations.charting.chart = bar
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = nmon
request.ui_dispatch_view = search
search = `alerting_PSERIES_pools_cpu_usage(*,*,*,90,300,5m)`

[NMON - CPU % usage exceeds 90% (5 consecutive minutes minimal duration)]
action.email = 0
action.email.include.trigger_time = 1
action.email.inline = 1
action.email.priority = 2
action.email.reportServerEnabled = 0
action.email.sendresults = 0
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.severity = 4
alert.suppress = 1
alert.suppress.fields = frameID,hostname
alert.suppress.period = 60m
alert.track = 1
counttype = number of events
cron_schedule = */5 * * * *
description = This alert with trigger hosts having a CPU % global usage superior to 90 %, and for a duration higher or equal to 5 minutes consecutively.\
If the LPAR data is not null (eg. AIX hosts running PSeries), then this section will used.\
In the contrary, the CPU_ALL section will used to identify the CPU % usage (applicable for all OS)
dispatch.earliest_time = -60m
dispatch.latest_time = now
display.events.fields = ["host","hostname","type","source","sourcetype"]
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.chartHeight = 571
display.visualizations.charting.chart = bar
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = nmon
request.ui_dispatch_view = search
search = `alerting_cpu_usage(*,*,90,300,5m)`

[NMON Collect - duplicated nmon instances may occur (excessive nbr of process launched)]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.severity = 4
alert.suppress = 1
alert.suppress.fields = host
alert.suppress.period = 60m
alert.track = 1
counttype = number of events
cron_schedule = */5 * * * *
description = This alert will trigger if it is detected that nmon instances were automatically launched too quickly.\
\
This may indicate a potential issue resulting in duplicating nmon instances on the host, which generates duplicated events, useless CPU load and licence cost
dispatch.earliest_time = -60m
dispatch.latest_time = now
display.events.fields = ["host","hostname","type","source","sourcetype"]
display.visualizations.chartHeight = 571
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = nmon
request.ui_dispatch_view = search
search = index=nmon sourcetype=nmon_collect "starting nmon" | transaction host maxpause=3m | where duration!=0


#############################################################
# TA-NMON Agent Reporting
#############################################################

[TA-nmon package deployment reporting (requires _internal access)]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.events.fields = ["host","hostname","type","source","sourcetype"]
display.visualizations.chartHeight = 577
display.visualizations.show = 0
request.ui_dispatch_app = nmon
request.ui_dispatch_view = search
search = index=_internal sourcetype=splunkd "DeployedApplication - Installing app=*nmon*"


[List of interpreter and interpreter versions per host]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.events.fields = ["host","hostname","type","source","sourcetype"]
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.chartHeight = 577
display.visualizations.show = 0
request.ui_dispatch_app = nmon
request.ui_dispatch_view = search
search = | pivot NMON_Processing_Data_Collect NMON_Processing last(converter_inuse) AS "Type of coverter in use (last known value)" last(interpreter_version) AS "Version of Interpreter (last known value)" SPLITROW _time AS _time\
PERIOD minute SPLITROW hostname AS hostname SORT 0 _time ROWSUMMARY 0 COLSUMMARY 0 NUMCOLS 0 SHOWOTHER 1 | dedup hostname "Type of coverter in use (last known value)" "Version of Interpreter (last known value)" | fields - _time

[TA-nmon package deployment reporting over time (requires _internal access)]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.events.fields = ["host","hostname","type","source","sourcetype"]
display.general.type = visualizations
display.page.search.tab = visualizations
display.visualizations.chartHeight = 577
display.visualizations.charting.chart.overlayFields = Nbr_of_deployment_actions
display.visualizations.charting.legend.placement = top
display.visualizations.show = 0
request.ui_dispatch_app = nmon
request.ui_dispatch_view = search
search = index=_internal sourcetype=splunkd "DeployedApplication - Installing app=*nmon*" | timechart span=1d dc(host) AS Number_hosts_deployed count AS Nbr_of_deployment_actions

[Universal Forwarders Configuration Report]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.events.fields = ["host","hostname","type","source","sourcetype"]
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.chartHeight = 534
display.visualizations.show = 0
request.ui_dispatch_app = nmon
request.ui_dispatch_view = search
search = index=_internal source=*metrics.log group=tcpin_connections version=* | eval hostname=if(isnull(hostname), sourceHost,hostname)\
| stats latest(sourceIp) AS sourceIp, latest(os) AS os, latest(version) AS version, latest(fwdType) AS fwdType, latest(arch) AS arch by hostname

################
#	SAFE CENTER #
################

#### CPU ####

[SAFE CENTER - Number of active CPU alerts]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -60m
dispatch.latest_time = now
display.events.fields = ["host","hostname","type","source","sourcetype"]
display.general.type = visualizations
display.page.search.tab = visualizations
display.visualizations.chartHeight = 534
display.visualizations.charting.chart = line
display.visualizations.singlevalue.afterLabel = CPU active alerts
display.visualizations.singlevalue.underLabel = 5m CPU % saturation over 90%
display.visualizations.type = singlevalue
request.ui_dispatch_app = nmon
request.ui_dispatch_view = search
search = index=_audit action=alert_fired action=alert_fired ss_name="NMON - CPU % usage exceeds 90% (5 consecutive minutes minimal duration)" ss_app="nmon" earliest="-60m" latest="now" | stats count AS count | rangemap field=count low=0-0 default=high

[SAFE CENTER - CPU issues]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.events.fields = ["host","hostname","type","source","sourcetype"]
display.general.type = visualizations
display.page.search.tab = visualizations
display.visualizations.chartHeight = 534
display.visualizations.charting.chart = line
display.visualizations.singlevalue.afterLabel = Host(s) with Potential CPU issue
display.visualizations.singlevalue.underLabel = 5m CPU % saturation over 90%
display.visualizations.type = singlevalue
request.ui_dispatch_app = nmon
request.ui_dispatch_view = search
search = `alerting_cpu_usage(*,*,90,300,5m)`

[SAFE CENTER - Number of active Real Memory alerts]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -60m
dispatch.latest_time = now
display.events.fields = ["host","hostname","type","source","sourcetype"]
display.general.type = visualizations
display.page.search.tab = visualizations
display.visualizations.chartHeight = 534
display.visualizations.charting.chart = line
display.visualizations.singlevalue.afterLabel = Memory active alerts
display.visualizations.singlevalue.underLabel = 5m Real Memory % saturation over 90%
display.visualizations.type = singlevalue
request.ui_dispatch_app = nmon
request.ui_dispatch_view = search
search = index=_audit action=alert_fired action=alert_fired ss_name="NMON - Real Memory % usage exceeds 90% (5 consecutive minutes minimal duration)" ss_app="nmon" earliest="-60m" latest="now" | stats count AS count | rangemap field=count low=0-0 default=high

[SAFE CENTER - Real Memory issues]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.events.fields = ["host","hostname","type","source","sourcetype"]
display.general.type = visualizations
display.page.search.tab = visualizations
display.visualizations.chartHeight = 534
display.visualizations.charting.chart = line
display.visualizations.singlevalue.afterLabel = Host(s) with Potential Memory issue
display.visualizations.singlevalue.underLabel = 5m Real Memory % saturation over 90%
display.visualizations.type = singlevalue
request.ui_dispatch_app = nmon
request.ui_dispatch_view = search
search = `alerting_realmemory_usage(*,*,90,300,5m)`

[SAFE CENTER - Number of active Virtual Memory alerts]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.events.fields = ["host","hostname","type","source","sourcetype"]
display.general.type = visualizations
display.page.search.tab = visualizations
display.visualizations.chartHeight = 534
display.visualizations.charting.chart = line
display.visualizations.singlevalue.afterLabel = Virtual Memory active alerts
display.visualizations.singlevalue.underLabel = 5m Virtual Memory % saturation over 40%
display.visualizations.type = singlevalue
request.ui_dispatch_app = nmon
request.ui_dispatch_view = search
search = index=_audit action=alert_fired action=alert_fired ss_name="NMON - Virtual Memory % usage exceeds 40% (5 consecutive minutes minimal duration)" ss_app="nmon" earliest="-60m" latest="now" | stats count AS count | rangemap field=count low=0-0 default=high

[SAFE CENTER - Virtual Memory issues]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.events.fields = ["host","hostname","type","source","sourcetype"]
display.general.type = visualizations
display.page.search.tab = visualizations
display.visualizations.chartHeight = 534
display.visualizations.charting.chart = line
display.visualizations.singlevalue.afterLabel = Host(s) with Potential Virtual Memory issue
display.visualizations.singlevalue.underLabel = 5m Virtual Memory % saturation over 40%
display.visualizations.type = singlevalue
request.ui_dispatch_app = nmon
request.ui_dispatch_view = search
search = `alerting_virtualmemory_usage(*,*,40,300,5m)`

[SAFE CENTER - Number of active FS alerts]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -60m
dispatch.latest_time = now
display.events.fields = ["host","hostname","type","source","sourcetype"]
display.general.type = visualizations
display.page.search.tab = visualizations
display.visualizations.chartHeight = 534
display.visualizations.charting.chart = line
display.visualizations.singlevalue.afterLabel = FileSystem active alerts
display.visualizations.singlevalue.underLabel = 5m FS % usage saturation over 90%
display.visualizations.type = singlevalue
request.ui_dispatch_app = nmon
request.ui_dispatch_view = search
search = index=_audit action=alert_fired action=alert_fired ss_name="NMON - File System % usage exceeds 90% (5 consecutive minutes minimal duration)" ss_app="nmon" earliest="-60m" latest="now" | stats count AS count | rangemap field=count low=0-0 default=high

[SAFE CENTER - FS issues]
action.email.reportServerEnabled = 0
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.events.fields = ["host","hostname","type","source","sourcetype"]
display.general.type = visualizations
display.page.search.tab = visualizations
display.visualizations.chartHeight = 534
display.visualizations.charting.chart = line
display.visualizations.singlevalue.afterLabel = Host(s) with FS usage in excess
display.visualizations.singlevalue.underLabel = 5m FS % usage saturation over 90%
display.visualizations.type = singlevalue
request.ui_dispatch_app = nmon
request.ui_dispatch_view = search
search = `alerting_filesystem_usage(*,*,90,300,5m)`
