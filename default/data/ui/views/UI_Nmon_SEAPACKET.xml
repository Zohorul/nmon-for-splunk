<form stylesheet="singlevalue.css,ui_simple.css">
  <label>UI SEAPACKET, Shared Ethernet Adapter Number of read/write packets</label>
  <description>User Interface for the SEAPACKET monitor (IBM PSeries Vios)</description>

  <fieldset autoRun="false" submitButton="false">

    <input type="time" token="timerange" searchWhenChanged="true">
      <label>Time Range:</label>
      <default>
        <earliestTime>-24h</earliestTime>
        <latestTime>now</latestTime>
      </default>
    </input>

    <input type="dropdown" token="timefilter" searchWhenChanged="true">
      <label>Time Filtering:</label>
      <choice value="No_Filter">No Filter (24/24, 7/7)</choice>
      <choice value="Day_BusinessDays_8h-19h">Day Business (08h-19h)</choice>
      <choice value="Day_WeekEnd_8h-19h">Day WE (08h-19h)</choice>
      <choice value="Day_AllDays_8h-19h">Day Week (08h-19h)</choice>
      <choice value="Night_BusinessDays_19h-8h">Night Business (19h-08h)</choice>
      <choice value="Night_WeekEnd_19h-8h">Night WE (19h-08h)</choice>
      <choice value="Night_AllDays_19h-8h">Night All Days (19h-08h)</choice>
      <default>No_Filter</default>
    </input>

    <input type="multiselect" token="frameID" searchWhenChanged="true">
      <label>Frame IDs:</label>
      <!-- Populating Data Model Search -->
      <search id="frameIDSearch">
        <query>| tstats count AS Count from datamodel=NMON_Data_SEA where (nodename = SEA_Data_types.SEAPACKET) groupby "SEA_Data_types.frameID" prestats=true
| stats dedup_splitvals=t count AS Count by "SEA_Data_types.frameID"
| sort limit=0 "SEA_Data_types.frameID"
| fields - _span | fillnull Count | fields "SEA_Data_types.frameID"</query>
        <earliest>$timerange.earliest$</earliest>
        <latest>$timerange.latest$</latest>
      </search>
      <valuePrefix>SEA_Data_types.frameID="</valuePrefix>
      <valueSuffix>"</valueSuffix>
      <delimiter> OR </delimiter>
      <choice value="*">Any</choice>
      <default>*</default>
      <fieldForLabel>SEA_Data_types.frameID</fieldForLabel>
      <fieldForValue>SEA_Data_types.frameID</fieldForValue>
    </input>

    <input type="text" token="hostname-prefilter" searchWhenChanged="true">
      <label>Optional: Filter hosts populating</label>
      <default>*</default>
    </input>

    <input type="multiselect" token="hostname" searchWhenChanged="true">
      <label>Hosts Selection:</label>
      <!-- Populating Data Model Search -->
      <search id="HostsbaseSearch">
        <query>| tstats count AS Count from datamodel=NMON_Data_SEA where (nodename = SEA_Data_types.SEAPACKET) (SEA_Data_types.hostname=$hostname-prefilter$) ($frameID$) groupby "SEA_Data_types.hostname", "SEA_Data_types.device" prestats=true
| stats dedup_splitvals=t count AS Count by "SEA_Data_types.hostname", "SEA_Data_types.device"
| sort limit=0 "SEA_Data_types.hostname"
| fields - _span
| fillnull Count | fields SEA_Data_types.hostname | dedup SEA_Data_types.hostname | sort SEA_Data_types.hostname</query>
        <earliest>$timerange.earliest$</earliest>
        <latest>$timerange.latest$</latest>
      </search>
      <valuePrefix>SEA_Data_types.hostname="</valuePrefix>
      <valueSuffix>"</valueSuffix>
      <delimiter> OR </delimiter>
      <choice value="*">ALL Hosts</choice>
      <fieldForLabel>SEA_Data_types.hostname</fieldForLabel>
      <fieldForValue>SEA_Data_types.hostname</fieldForValue>
    </input>

    <input type="multiselect" token="device" searchWhenChanged="true">
      <label>Interfaces Selection:</label>
      <!-- Populating Data Model Search -->
      <search id="DisksbaseSearch">
        <query>| tstats count AS Count from datamodel=NMON_Data_SEA where (nodename = SEA_Data_types.SEAPACKET) (SEA_Data_types.hostname=$hostname-prefilter$) ($frameID$) ($hostname$) groupby "SEA_Data_types.hostname", "SEA_Data_types.device" prestats=true
| stats dedup_splitvals=t count AS Count by "SEA_Data_types.hostname", "SEA_Data_types.device"
| sort limit=0 "SEA_Data_types.hostname"
| fields - _span
| fillnull Count | fields SEA_Data_types.device | dedup SEA_Data_types.device | sort SEA_Data_types.device</query>
        <earliest>$timerange.earliest$</earliest>
        <latest>$timerange.latest$</latest>
      </search>
      <valuePrefix>SEA_Data_types.device="</valuePrefix>
      <valueSuffix>"</valueSuffix>
      <delimiter> OR </delimiter>
      <choice value="*">ALL Interfaces</choice>
      <default>*</default>
      <fieldForLabel>SEA_Data_types.device</fieldForLabel>
      <fieldForValue>SEA_Data_types.device</fieldForValue>
    </input>

    <input type="dropdown" token="aggregate" searchWhenChanged="true">
      <label>Aggregate:</label>
      <choice value="fields *">Single Series</choice>
      <choice value="stats dedup_splitvals=t avg(SEA_Data_types.value) AS SEA_Data_types.value by _time, SEA_Data_types.hostname, SEA_Data_types.device | eval SEA_Data_types.device=&quot;aggreg_device&quot;">Average by Time interval, host</choice>
      <choice value="stats dedup_splitvals=t avg(SEA_Data_types.value) AS SEA_Data_types.value by _time | eval SEA_Data_types.hostname=&quot;aggreg_hostname&quot; | eval SEA_Data_types.device=&quot;aggreg_device&quot;">Average by Time interval</choice>      
      <choice value="stats dedup_splitvals=t max(SEA_Data_types.value) AS SEA_Data_types.value by _time, SEA_Data_types.hostname, SEA_Data_types.device | eval SEA_Data_types.device=&quot;aggregate&quot;">Max by Time interval, host</choice>
      <choice value="stats dedup_splitvals=t max(SEA_Data_types.value) AS SEA_Data_types.value by _time | eval SEA_Data_types.hostname=&quot;aggreg_hostname&quot; | eval SEA_Data_types.device=&quot;aggreg_device&quot;">Max by Time interval</choice>      
      <choice value="stats dedup_splitvals=t sum(SEA_Data_types.value) AS SEA_Data_types.value by _time, SEA_Data_types.hostname, SEA_Data_types.device | eval SEA_Data_types.device=&quot;aggregate&quot;">Sum by Time interval, host</choice>
      <choice value="stats dedup_splitvals=t sum(SEA_Data_types.value) AS SEA_Data_types.value by _time | eval SEA_Data_types.hostname=&quot;aggreg_hostname&quot; | eval SEA_Data_types.device=&quot;aggreg_device&quot;">Sum by Time interval</choice>      
      <default>fields *</default>
    </input>

    <input type="dropdown" token="statsmode" searchWhenChanged="true">
      <label>Stats mode:</label>
      <default>max</default>
      <choice value="max">Max</choice>
      <choice value="avg">Avg</choice>
      <choice value="min">Min</choice>
      <choice value="median">Median</choice>
      <choice value="mode">Mode</choice>
      <choice value="range">Range</choice>
    </input>    

    <input type="checkbox" token="charting" searchWhenChanged="true">
      <label>Charting:</label>
      <default>fields *</default>
      <choice value="fields *">On</choice>
    </input>

  </fieldset>

  <row>
    <panel>
      <table>
  		<search id="tablestats">
    	  <query>| tstats max("SEA_Data_types.value") AS SEA_Data_types.value from datamodel=NMON_Data_SEA 
where (nodename = SEA_Data_types.SEAPACKET) (SEA_Data_types.hostname=$hostname-prefilter$) ($frameID$) ($hostname$) ($device$) groupby _time, "SEA_Data_types.hostname", "SEA_Data_types.device" prestats=true 
| stats dedup_splitvals=t max("SEA_Data_types.value") AS SEA_Data_types.value by _time, "SEA_Data_types.hostname", "SEA_Data_types.device"
| $aggregate$
| rename "SEA_Data_types.hostname" AS hostname, "SEA_Data_types.device" AS device, "SEA_Data_types.value" AS value
| stats max(value) AS max_value, avg(value) AS avg_value, min(value) AS min_value, sparkline($statsmode$(value)) As sparkline by  "hostname", "device"
| sort limit=0 "hostname"
| eval value=round(value,2)
| fields hostname,device,max_value, avg_value, min_value,sparkline | eval avg_value=round(avg_value,2)</query>
    		<earliest>$timerange.earliest$</earliest>
    		<latest>$timerange.latest$</latest>  
  		  </search>      
        <option name="wrap">true</option>
        <option name="rowNumbers">false</option>
        <option name="dataOverlayMode">none</option>
        <option name="drilldown">cell</option>
        <option name="count">10</option>
        <!-- Set sparkline options here; make sure that field matches field name of the search results -->
        <format type="sparkline" field="sparkline">
          <option name="lineColor">#5379af</option>
          <option name="fillColor">#CCDDFF</option>
          <option name="lineWidth">1</option>
          <option name="height">25px</option>
        </format>
      </table>
    </panel>
  </row>
  
  <row depends="$charting$">
    <panel>
      <title>Charting parameters:</title>
      <input type="dropdown" token="chart" searchWhenChanged="true">
        <label>Select a type of chart:</label>
        <default>line</default>
        <choice value="area">Area</choice>
        <choice value="line">Line</choice>
        <choice value="column">Column</choice>
        <choice value="bar">Bar</choice>
      </input>
      <input type="dropdown" token="charting.chart.nullValueMode" searchWhenChanged="true">
        <label>Missing Data:</label>
        <default>gaps</default>
        <choice value="gaps">Gaps</choice>
        <choice value="connect">Connect</choice>
        <choice value="zero">Zero</choice>
      </input>
      <input type="dropdown" token="chart.stackingmode" searchWhenChanged="true">
        <label>Select a stacking mode:</label>
        <default>unstacked</default>
        <choice value="stacked">stacked (lines excluded)</choice>
        <choice value="stacked100">100% stacked (lines excluded)</choice>
        <choice value="unstacked">unstacked</choice>
      </input>
      <input type="dropdown" token="charting.legend.placement" searchWhenChanged="true">
        <label>Legend placement:</label>
        <default>bottom</default>
        <choice value="bottom">Bottom</choice>
        <choice value="top">Top</choice>
        <choice value="left">left</choice>
        <choice value="right">right</choice>
        <choice value="center">center</choice>
        <choice value="none">none</choice>
      </input>
      <input type="dropdown" token="span" searchWhenChanged="true">
        <label>Span:</label>
        <default>`inline_customspan`</default>
        <choice value="`inline_customspan`">auto</choice>
		  <choice value="span=1m">1 minute</choice>
		  <choice value="span=2m">2 minutes</choice>
		  <choice value="span=3m">3 minutes</choice>
		  <choice value="span=4m">4 minutes</choice>
		  <choice value="span=5m">5 minutes</choice>
		  <choice value="span=10m">10 minutes</choice>
		  <choice value="span=15m">15 minutes</choice>
		  <choice value="span=30m">30 minutes</choice>
		  <choice value="span=1h">1 hour</choice>
		  <choice value="span=2h">2 hours</choice>
		  <choice value="span=12h">12 hours</choice>
		  <choice value="span=4h">4 hours</choice>
		  <choice value="span=1d">1 day</choice>
		  <choice value="span=2d">2 days</choice>
		  <choice value="span=1w">7 days</choice>
		  <choice value="span=1mon">1 month</choice>
      </input>      
    </panel>
  </row>
    
  <row depends="$charting$">
    <panel>
      <chart>
  			<search id="timechart">
          <query>| tstats max("SEA_Data_types.value") AS SEA_Data_types.value from datamodel=NMON_Data_SEA 
where (nodename = SEA_Data_types.SEAPACKET) (SEA_Data_types.hostname=$hostname-prefilter$) ($frameID$) ($hostname$) ($device$) 
groupby _time, "SEA_Data_types.hostname", "SEA_Data_types.device" prestats=true span=1m
| stats dedup_splitvals=t max("SEA_Data_types.value") AS SEA_Data_types.value by _time, "SEA_Data_types.hostname", "SEA_Data_types.device"
| $aggregate$
| $charting$
| rename SEA_Data_types.hostname AS hostname, SEA_Data_types.device AS device, SEA_Data_types.value AS value
| bucket _time $span$
| stats $statsmode$(value) As value by _time,hostname,device
| eval s1="value"
| makemv s1 
| mvexpand s1
| eval yval=case(s1=="value",value)
| eval series=hostname+":"+device
| xyseries _time,series,yval
| makecontinuous _time $span$</query>
    		<earliest>$timerange.earliest$</earliest>
    		<latest>$timerange.latest$</latest>
		  </search>
        <option name="charting.axisTitleX.visibility">visible</option>
        <option name="charting.axisTitleY.visibility">visible</option>
        <option name="charting.axisX.scale">linear</option>
        <option name="charting.axisY.scale">linear</option>
        <option name="charting.chart">$chart$</option>
        <option name="charting.chart.nullValueMode">$charting.chart.nullValueMode$</option>
        <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
        <option name="charting.chart.stackMode">$chart.stackingmode$</option>
        <option name="charting.chart.style">shiny</option>
        <option name="charting.drilldown">all</option>
        <option name="charting.layout.splitSeries">0</option>
        <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
        <option name="charting.legend.placement">$charting.legend.placement$</option>
        <option name="height">680px</option>
        <option name="charting.axisTitleX.text">Time</option>
        <option name="charting.axisY.minimumNumber">0</option>
        <option name="charting.axisTitleY.text">Number of Network Packets</option>
      </chart>
    </panel>
  </row>
</form>